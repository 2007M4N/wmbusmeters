
To add a meter type, make a copy of meter_supercom587.cc to
meter_yourmeter.cc and add your meter
to LIST_OF_METERS in meters.h

In meter_yourmeter.cc, search and replace supercom587 for yourmeter,
possibly adding a new meter type in meters.h if your meter is not a
water meter and inheriting from that new meter type instead.

Change the constructor and processContent to do your bidding.

If you pass --debug to the commandline, wmbusmeters will print the
parse results of the data package on stdout. You can see what DifVif
data there is and adjust your code to fit. If your meter is using C1
mode, then simply try the multical21 meter and --debug. It will print
the parsing of the DifVif data and tell you the DifVif pairs
(DifVifVife triplets, or DifDifeVifVife quadruplets (though
quadruplets are not yet implemented)) even if the data comes from a
different type of meter.

It is very helpful if you have problems to email me (oehrstroem@gmail.com)
the --debug output, or just simply the telegram=|.........|.......| lines from the
debug output. These contain the decrypted output from the meter and
are very useful to replay the messages. The +... at the end can be
used to replay with the same timing as the messages arrived when
logging. This can be useful for testing the higher levels of the software
stack where the data is actually displayed to the user or alarms triggered.

Check in simulation.txt and test.sh for how to use this feature.
